#!/usr/bin/env lua

homeDir = os.getenv("HOME")

result = os.execute("mkdir -p " .. homeDir .. "/.todos")

if result == true then
    print("Directory created or already exists: " .. homeDir .. "/.todos")
else
    print("Error creating directory: " .. homeDir .. "/.todos")
end

filePath = homeDir .. "/.todos/todos"

function addItem(item)
    local file, error = io.open(filePath, "a")

    if error then
        print("ERROR:", error)
        return
    end

    local itemToAdd = string.format("%s\n", item)
    file:write(itemToAdd)
    file:close()
    print("Todo Added Successfully!")
end

function removeItem(item)
    local file, error = io.open(filePath, "r")

    if error then
        print("ERROR:", error)
        return
    end

    local lines = file:lines()
    local linesTable = {}

    for line in lines do
        if line ~= item then
            table.insert(linesTable, line)
        end
    end
    file:close()

    file, error = io.open(filePath, "w")

    if error then
        print("ERROR:", error)
        return
    end

    for _, line in ipairs(linesTable) do
        local itemToAdd = string.format("%s\n", line)
        file:write(itemToAdd)
    end
    file:close()

end

function showItems()
    local file, error = io.open(filePath, "r")

    if not file then
        print("No Todo Items")
        if error then
            print("ERROR:", error)
        end
        return
    end

    local lines = file:lines()

    for line in lines do
        print(line)
    end

    file:close()

end

function main()
    local command = arg[1]
    local item = table.concat(arg, " ", 2)

    if command == "add" then
        addItem(item)
    elseif command == "remove" then
        removeItem(item)
    elseif command == "show" then
        showItems()
    else
        print("Invalid command. Use 'add', 'remove', or 'show'.")
    end
end

main()
